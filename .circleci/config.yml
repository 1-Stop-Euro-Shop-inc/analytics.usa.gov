version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: install npm dependencies
          command: |
            npm install
            sudo npm install -g eslint
            sudo npm install -g webpack
      - run:
          name: lint javascript
          command: npm run lint
      - run:
          name: run tests
          command: npm run test
      - run:
          name: bundle for production javascript
          command: npm run build-prod
      - persist_to_workspace:
          root: .
          paths:
            - assets

  deploy-production:
    docker:
      - image: circleci/ruby:2.5-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - attach_workspace:
          at: .
      - run:
          name: build production
          command: make production
      - deploy:
          name: deploy production
          command: bin/deploy-ci.sh analytics

  deploy-staging:
    docker:
      - image: circleci/ruby:2.5-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - attach_workspace:
          at: .
      - run:
          name: build staging
          command: make staging
      - deploy:
          name: deploy staging
          command: bin/deploy-ci.sh analytics-staging


workflows:
  version: 2
  commit:
    jobs:
      - build
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only:
                - staging
